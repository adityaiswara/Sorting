void merge(vector<int>& arr, int left_low, int left_high, int right_low, int right_high) {
    int left = left_low;
    int right = right_low;
    vector<int> v;
    for (int i = 0; i < right_high - left_low + 1; i++) {
        if (left > left_high) {
            v.push_back(arr[right]);
            right++;
        } else if (right > right_high) {
            v.push_back(arr[left]);
            left++;
        } else if (arr[left] < arr[right]) {
            v.push_back(arr[left]);
            left++;
        } else {
            v.push_back(arr[right]);
            right++;
        }
    }
    for (int i = left_low; i <= right_high; i++) {
        arr[i] = v[i - left_low];
    }
}

void mergeSort(vector<int>& arr, int low, int high) {
    if (low < high) {
        int mid = (low + high) / 2;
        mergeSort(arr, low, mid);
        mergeSort(arr, mid + 1, high);
        merge(arr, low, mid, mid + 1, high);
    }
}
